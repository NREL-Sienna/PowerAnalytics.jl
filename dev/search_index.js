var documenterSearchIndex = {"docs":
[{"location":"api/PowerAnalytics/#PowerAnalytics","page":"PowerAnalytics","title":"PowerAnalytics","text":"","category":"section"},{"location":"api/PowerAnalytics/","page":"PowerAnalytics","title":"PowerAnalytics","text":"CurrentModule = PowerAnalytics\nDocTestSetup  = quote\n    using PowerAnalytics\nend","category":"page"},{"location":"api/PowerAnalytics/","page":"PowerAnalytics","title":"PowerAnalytics","text":"API documentation","category":"page"},{"location":"api/PowerAnalytics/","page":"PowerAnalytics","title":"PowerAnalytics","text":"Pages = [\"PowerAnalytics.md\"]","category":"page"},{"location":"api/PowerAnalytics/#Index","page":"PowerAnalytics","title":"Index","text":"","category":"section"},{"location":"api/PowerAnalytics/","page":"PowerAnalytics","title":"PowerAnalytics","text":"Pages = [\"PowerAnalytics.md\"]","category":"page"},{"location":"api/PowerAnalytics/#Exported","page":"PowerAnalytics","title":"Exported","text":"","category":"section"},{"location":"api/PowerAnalytics/","page":"PowerAnalytics","title":"PowerAnalytics","text":"Modules = [PowerAnalytics]\nPrivate = false","category":"page"},{"location":"api/PowerAnalytics/#PowerAnalytics.categorize_data-Tuple{Dict{Symbol, DataFrames.DataFrame}, Dict}","page":"PowerAnalytics","title":"PowerAnalytics.categorize_data","text":"Re-categorizes data according to an aggregation dictionary\n\nmakes no guarantee of complete data collection *\n\nExample\n\naggregation = PA.make_fuel_dictionary(results_uc.system)\ncategorize_data(gen_uc.data, aggregation)\n\n\n\n\n\n","category":"method"},{"location":"api/PowerAnalytics/#PowerAnalytics.make_fuel_dictionary-Tuple{PowerSystems.System, Dict{NamedTuple, String}}","page":"PowerAnalytics","title":"PowerAnalytics.make_fuel_dictionary","text":"generators = make_fuel_dictionary(system::PSY.System, mapping::Dict{NamedTuple, String})\n\nThis function makes a dictionary of fuel type and the generators associated.\n\nArguments\n\nsys::PSY.System: the system that is used to create the results\nresults::IS.Results: results\n\nKey Words\n\ncategories::Dict{String, NamedTuple}: if stacking by a different category is desired\n\nExample\n\nresults = solveopmodel!(OpModel) generators = makefueldictionary(sys)\n\n\n\n\n\n","category":"method"},{"location":"api/PowerAnalytics/#Internal","page":"PowerAnalytics","title":"Internal","text":"","category":"section"},{"location":"api/PowerAnalytics/","page":"PowerAnalytics","title":"PowerAnalytics","text":"Modules = [PowerAnalytics]\nPublic = false","category":"page"},{"location":"api/PowerAnalytics/#PowerAnalytics.combine_categories-Tuple{Union{Dict{String, DataFrames.DataFrame}, Dict{Symbol, DataFrames.DataFrame}}}","page":"PowerAnalytics","title":"PowerAnalytics.combine_categories","text":"aggregates and combines data into single DataFrame\n\nExample\n\nPG.combine_categories(gen_uc.data)\n\n\n\n\n\n","category":"method"},{"location":"api/PowerAnalytics/#PowerAnalytics.get_generator_category-Tuple{Any, Any, Any, Any, Dict{NamedTuple, String}}","page":"PowerAnalytics","title":"PowerAnalytics.get_generator_category","text":"Return the generator category for this fuel and unit_type.\n\n\n\n\n\n","category":"method"},{"location":"api/PowerAnalytics/#PowerAnalytics.get_generator_mapping","page":"PowerAnalytics","title":"PowerAnalytics.get_generator_mapping","text":"Return a dict where keys are a tuple of input parameters (fuel, unit_type) and values are generator types.\n\n\n\n\n\n","category":"function"},{"location":"#PowerAnalytics.jl","page":"Introduction","title":"PowerAnalytics.jl","text":"","category":"section"},{"location":"#Overview","page":"Introduction","title":"Overview","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"PowerAnalytics.jl is a Julia package designed to support power system simulation results analysis. It relies on results generated from PowerSimulations.jl. PowerAnalytics provides the data collection, aggregation, and subsetting for PowerGraphics.jl.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"The documentation is still a work in progress.","category":"page"},{"location":"#Installation","page":"Introduction","title":"Installation","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"The latest stable release of PowerAnalytics can be installed using the Julia package manager with","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"] add PowerAnalytics","category":"page"}]
}
